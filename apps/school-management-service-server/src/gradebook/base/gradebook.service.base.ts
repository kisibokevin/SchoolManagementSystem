/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Gradebook as PrismaGradebook } from "@prisma/client";

export class GradebookServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GradebookCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gradebook.count(args);
  }

  async gradebooks<T extends Prisma.GradebookFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GradebookFindManyArgs>
  ): Promise<PrismaGradebook[]> {
    return this.prisma.gradebook.findMany<Prisma.GradebookFindManyArgs>(args);
  }
  async gradebook<T extends Prisma.GradebookFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GradebookFindUniqueArgs>
  ): Promise<PrismaGradebook | null> {
    return this.prisma.gradebook.findUnique(args);
  }
  async createGradebook<T extends Prisma.GradebookCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GradebookCreateArgs>
  ): Promise<PrismaGradebook> {
    return this.prisma.gradebook.create<T>(args);
  }
  async updateGradebook<T extends Prisma.GradebookUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GradebookUpdateArgs>
  ): Promise<PrismaGradebook> {
    return this.prisma.gradebook.update<T>(args);
  }
  async deleteGradebook<T extends Prisma.GradebookDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GradebookDeleteArgs>
  ): Promise<PrismaGradebook> {
    return this.prisma.gradebook.delete(args);
  }
}
