/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Financial as PrismaFinancial } from "@prisma/client";

export class FinancialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financial.count(args);
  }

  async financials<T extends Prisma.FinancialFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinancialFindManyArgs>
  ): Promise<PrismaFinancial[]> {
    return this.prisma.financial.findMany<Prisma.FinancialFindManyArgs>(args);
  }
  async financial<T extends Prisma.FinancialFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinancialFindUniqueArgs>
  ): Promise<PrismaFinancial | null> {
    return this.prisma.financial.findUnique(args);
  }
  async createFinancial<T extends Prisma.FinancialCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinancialCreateArgs>
  ): Promise<PrismaFinancial> {
    return this.prisma.financial.create<T>(args);
  }
  async updateFinancial<T extends Prisma.FinancialUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinancialUpdateArgs>
  ): Promise<PrismaFinancial> {
    return this.prisma.financial.update<T>(args);
  }
  async deleteFinancial<T extends Prisma.FinancialDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FinancialDeleteArgs>
  ): Promise<PrismaFinancial> {
    return this.prisma.financial.delete(args);
  }
}
